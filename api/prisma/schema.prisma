// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

generator fabbrica {
  provider = "prisma-fabbrica"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id              Int           @default(autoincrement()) @id
  email           String        @unique
  name            String?
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  deletedAt       DateTime?
  motivators     Motivator[]
  stresses        Stress[]
}

model Motivator {
  id              Int           @default(autoincrement()) @id // Scalar Type
  name            String
  weight          Int?
  userId          Int
  typeId          Int?
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  deletedAt       DateTime?
  user            User          @relation(fields: [userId], references: [id])
  type            Type?         @relation(fields: [typeId], references: [id])
  typesOnMotivators TypesOnMotivators[] // Model Type
}

model Stress {
  id              Int           @default(autoincrement()) @id
  name            String
  weight          Int?
  userId          Int
  typeId          Int?
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  deletedAt       DateTime?
  user            User          @relation(fields: [userId], references: [id])
  type            Type?         @relation(fields: [typeId], references: [id])
  typesOnStresses   TypesOnStresses[]
}

model Type {
  id              Int           @default(autoincrement()) @id
  name            String
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  deletedAt       DateTime?
  motivators     Motivator[]
  stresses        Stress[]
  typesOnMotivators TypesOnMotivators[]
  typesOnStresses   TypesOnStresses[]
}

model TypesOnMotivators {
  id              Int           @default(autoincrement()) @id
  motivatorId    Int
  typeId          Int
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  deletedAt       DateTime?
  motivator      Motivator    @relation(fields: [motivatorId], references: [id])
  type            Type          @relation(fields: [typeId], references: [id])
}

model TypesOnStresses {
  id              Int           @default(autoincrement()) @id
  stressId        Int
  typeId          Int
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  deletedAt       DateTime?
  stress          Stress        @relation(fields: [stressId], references: [id])
  type            Type          @relation(fields: [typeId], references: [id])
}
