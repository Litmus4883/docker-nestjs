// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

generator fabbrica {
  provider = "prisma-fabbrica"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id              Int           @default(autoincrement()) @id
  email           String        @unique
  password        String? 
  name            String?
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  deletedAt       DateTime?
  motivators      Motivator[]
  stressors       Stressor[]
}

model Motivator {
  id                Int                 @default(autoincrement()) @id // Scalar Type
  name              String
  weight            Int?
  userId            Int
  typeId            Int?
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
  deletedAt         DateTime?
  user              User                @relation(fields: [userId], references: [id], onDelete: Cascade)
  type              Type?               @relation(fields: [typeId], references: [id], onDelete: Cascade)
  typesOnMotivators TypesOnMotivators[] // Model Type

  @@index([userId])
  @@index([typeId])
}

model Stressor {
  id                Int                 @default(autoincrement()) @id
  name              String
  weight            Int?
  userId            Int
  typeId            Int?
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
  deletedAt         DateTime?
  user              User                @relation(fields: [userId], references: [id], onDelete: Cascade)
  type              Type?               @relation(fields: [typeId], references: [id], onDelete: Cascade)
  typesOnStressors  TypesOnStressors[]
  
  @@index([userId])
  @@index([typeId])
}

model Type {
  id                Int                 @default(autoincrement()) @id
  name              String
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
  deletedAt         DateTime?
  motivators        Motivator[]
  stressors         Stressor[]
  typesOnMotivators TypesOnMotivators[]
  typesOnStressors  TypesOnStressors[]
}

model TypesOnMotivators {
  id              Int           @default(autoincrement()) @id
  motivatorId     Int
  typeId          Int
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  deletedAt       DateTime?
  motivator       Motivator     @relation(fields: [motivatorId], references: [id], onDelete: Cascade)
  type            Type          @relation(fields: [typeId], references: [id], onDelete: Cascade)
  
  @@index([motivatorId])
  @@index([typeId])
}

model TypesOnStressors {
  id              Int         @default(autoincrement()) @id
  stressorId      Int
  typeId          Int
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
  deletedAt       DateTime?
  stressor        Stressor    @relation(fields: [stressorId], references: [id], onDelete: Cascade)
  type            Type        @relation(fields: [typeId], references: [id], onDelete: Cascade)
  
  @@index([stressorId])
  @@index([typeId])
}
